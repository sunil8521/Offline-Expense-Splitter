




  

















   


    

    

    
    private void showAddTransactionDialog(boolean isBorrow) {
        JDialog dialog = new JDialog(this, isBorrow ? "Add Borrowed Money" : "Add Debt", true);
        dialog.setSize(400, 350);
        dialog.setLocationRelativeTo(this);
        dialog.setLayout(new BorderLayout());
        
        JPanel formPanel = new JPanel(new GridBagLayout());
        formPanel.setBorder(new EmptyBorder(20, 20, 20, 20));
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        
        // Friend dropdown
        gbc.gridx = 0;
        gbc.gridy = 0;
        JLabel friendLabel = new JLabel("Friend");
        formPanel.add(friendLabel, gbc);
        
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        JComboBox<String> friendComboBox = new JComboBox<>();
        for (Friend friend : friends) {
            friendComboBox.addItem(friend.getName());
        }
        formPanel.add(friendComboBox, gbc);
        
        // Amount field
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 0;
        JLabel amountLabel = new JLabel("Amount");
        formPanel.add(amountLabel, gbc);
        
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        JTextField amountField = new JTextField(20);
        formPanel.add(amountField, gbc);
        
        // Reason field
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 0;
        JLabel reasonLabel = new JLabel("Reason");
        formPanel.add(reasonLabel, gbc);
        
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        JTextField reasonField = new JTextField(20);
        formPanel.add(reasonField, gbc);
        
        // Date field
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.weightx = 0;
        JLabel dateLabel = new JLabel("Date");
        formPanel.add(dateLabel, gbc);
        
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.weightx = 1.0;
        JTextField dateField = new JTextField(LocalDate.now().format(DateTimeFormatter.ISO_LOCAL_DATE));
        formPanel.add(dateField, gbc);
        
        dialog.add(formPanel, BorderLayout.CENTER);
        
        // Buttons
        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        JButton cancelButton = new JButton("Cancel");
        JButton saveButton = new JButton("Save");
        
        cancelButton.addActionListener(e -> dialog.dispose());
        saveButton.addActionListener(e -> {
            try {
                String friendName = (String) friendComboBox.getSelectedItem();
                double amount = Double.parseDouble(amountField.getText().trim());
                String reason = reasonField.getText().trim();
                String date = dateField.getText().trim();
                
                if (friendName != null && amount > 0 && !reason.isEmpty() && !date.isEmpty()) {
                    // Create new transaction
                    Transaction transaction = new Transaction(friendName, reason, amount, date);
                    
                    // Add to appropriate list
                    if (isBorrow) {
                        borrowTransactions.add(transaction);
                    } else {
                        debtTransactions.add(transaction);
                    }
                    
                    // Update friend's borrow/debt amount
                    for (Friend friend : friends) {
                        if (friend.getName().equals(friendName)) {
                            if (isBorrow) {
                                friend.setBorrowAmount(friend.getBorrowAmount() + amount);
                            } else {
                                friend.setDebtAmount(friend.getDebtAmount() + amount);
                            }
                            break;
                        }
                    }
                    
                    // Refresh UI
                    refreshUI();
                    
                    dialog.dispose();
                } else {
                    JOptionPane.showMessageDialog(dialog, "Please fill all fields correctly", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(dialog, "Please enter a valid amount", "Error", JOptionPane.ERROR_MESSAGE);
            }
        });
        
        buttonPanel.add(cancelButton);
        buttonPanel.add(saveButton);
        dialog.add(buttonPanel, BorderLayout.SOUTH);
        
        dialog.setVisible(true);
    }
    

    

    